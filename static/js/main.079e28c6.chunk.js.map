{"version":3,"sources":["components/Modal/Modal.module.css","components/App/App.module.css","components/ImageGallery/ImageGallery.module.css","components/Loader/Loader.module.css","components/Button/Button.module.css","components/Searchbar/Searchbar.module.css","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","components/ImageGalleryItem/ImageGalleryModal.js","components/services/images-api.js","components/Loader/Loader.js","components/Button/Button.js","components/App/App.js","index.js","components/ImageGalleryItem/ImageGalleryItem.module.css"],"names":["module","exports","Searchbar","onSubmit","useState","inputValue","setInputValue","className","s","SearchForm","e","preventDefault","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","trim","ImageGalleryItem","url","name","onClickImg","onClick","src","alt","ImageGalleryItemImage","ImageGallery","images","onImgClick","map","item","webformatURL","user","id","modal","document","querySelector","Modal","onClose","clearModal","children","useEffect","window","addEventListener","onEscClick","removeEventListener","code","createPortal","Overlay","target","ModalImage","ImagesAPIService","this","searchQuery","page","perPage","fetch","then","response","ok","json","Promise","reject","Error","newQuery","Spinner","color","height","width","timeout","Button","onClickBtn","imagesAPIService","Status","App","searchValue","setSearchValue","largeImg","setLargeImg","showModal","setShowModal","error","setError","setImages","status","setStatus","setPage","query","console","log","fetchImages","result","hits","length","prevImages","catch","finally","scrollTo","top","documentElement","scrollHeight","behavior","toggleModal","resetPage","message","notFound","largeImage","find","img","incrementPage","largeImageURL","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.079e28c6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2lABx\",\"Modal\":\"Modal_Modal__AHDQT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3QEuc\",\"notFound\":\"App_notFound__14NoI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1TfD6\",\"notFound\":\"ImageGallery_notFound__3YOii\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"Loader_Spinner__33vgs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__TSwWV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__sk_Ak\",\"SearchForm\":\"Searchbar_SearchForm__QmcCl\",\"SearchFormButton\":\"Searchbar_SearchFormButton__1pw8T\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__3g102\",\"SearchFormInput\":\"Searchbar_SearchFormInput__1EZo3\",\"SearchForm-input\":\"Searchbar_SearchForm-input__3nNbp\"};","import { useState } from \"react\";\r\nimport s from \"./Searchbar.module.css\";\r\n\r\nexport default function Searchbar({ onSubmit }) {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const addInputSearch = (e) => {\r\n    setInputValue(e.currentTarget.value.trim());\r\n  };\r\n\r\n  const onSubmitInput = (e) => {\r\n    e.preventDefault();\r\n    onSubmit(inputValue);\r\n    setInputValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <header className={s.Searchbar}>\r\n      <form className={s.SearchForm} onSubmit={onSubmitInput}>\r\n        <button type=\"submit\" className={s.SearchFormButton}>\r\n          <span className={s.SearchFormButtonLabel}>Search</span>\r\n        </button>\r\n        <input\r\n          className={s.SearchFormInput}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          value={inputValue}\r\n          onChange={addInputSearch}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\n// Классы\r\n// export default class Searchbar extends Component {\r\n//   state = {\r\n//     inputValue: '',\r\n//   };\r\n\r\n//   addInputSearch = e => {\r\n//     this.setState({ inputValue: e.currentTarget.value.trim() });\r\n//   };\r\n\r\n//   onSubmitInput = e => {\r\n//     e.preventDefault();\r\n//     this.props.onSubmit(this.state.inputValue);\r\n//     this.setState({ inputValue: '' });\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <header className={s.Searchbar}>\r\n//         <form className={s.SearchForm} onSubmit={this.onSubmitInput}>\r\n//           <button type=\"submit\" className={s.SearchFormButton}>\r\n//             <span className={s.SearchFormButtonLabel}>Search</span>\r\n//           </button>\r\n//           <input\r\n//             className={s.SearchFormInput}\r\n//             type=\"text\"\r\n//             autoComplete=\"off\"\r\n//             autoFocus\r\n//             placeholder=\"Search images and photos\"\r\n//             value={this.state.inputValue}\r\n//             onChange={this.addInputSearch}\r\n//           />\r\n//         </form>\r\n//       </header>\r\n//     );\r\n//   }\r\n// }\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./ImageGalleryItem.module.css\";\r\n\r\nexport default function ImageGalleryItem({ url, name, onClickImg }) {\r\n  return (\r\n    <li className={s.ImageGalleryItem} onClick={onClickImg}>\r\n      <img src={url} alt={name} className={s.ImageGalleryItemImage} />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  url: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./ImageGallery.module.css\";\r\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\r\nexport default function ImageGallery({ images, onImgClick }) {\r\n  return (\r\n    <>\r\n      <ul className={s.ImageGallery}>\r\n        {images.map((item) => (\r\n          <ImageGalleryItem\r\n            key={item.id}\r\n            url={item.webformatURL}\r\n            name={item.user}\r\n            onClickImg={onImgClick}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n","import { useEffect } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport s from \"./Modal.module.css\";\r\n\r\nconst modal = document.querySelector(\"#modal-root\");\r\n\r\nexport default function Modal({ onClose, clearModal, children }) {\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", onEscClick);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", onEscClick);\r\n    };\r\n  });\r\n\r\n  const onEscClick = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      onClose();\r\n      clearModal();\r\n    }\r\n  };\r\n\r\n  const onBackdropClick = (e) => {\r\n    if (e.target === e.currentTarget) {\r\n      onClose();\r\n      clearModal();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className={s.Overlay} onClick={onBackdropClick}>\r\n      <div className={s.Modal}>{children}</div>\r\n    </div>,\r\n    modal\r\n  );\r\n}\r\n\r\n//Классы\r\n// import { Component } from 'react';\r\n// import { createPortal } from 'react-dom';\r\n// import s from './Modal.module.css';\r\n\r\n// const modal = document.querySelector('#modal-root');\r\n// export default class Modal extends Component {\r\n//   componentDidMount() {\r\n//     window.addEventListener('keydown', this.onEscClick);\r\n//   }\r\n\r\n//   componentWillUnmount() {\r\n//     window.removeEventListener('keydown', this.onEscClick);\r\n//   }\r\n\r\n//   onEscClick = e => {\r\n//     if (e.code === 'Escape') {\r\n//       this.props.onClose();\r\n//       this.props.clearModal();\r\n//     }\r\n//   };\r\n\r\n//   onBackdropClick = e => {\r\n//     if (e.target === e.currentTarget) {\r\n//       this.props.onClose();\r\n//       this.props.clearModal();\r\n//     }\r\n//   };\r\n\r\n//   render() {\r\n//     return createPortal(\r\n//       <div className={s.Overlay} onClick={this.onBackdropClick}>\r\n//         <div className={s.Modal}>{this.props.children}</div>\r\n//       </div>,\r\n//       modal,\r\n//     );\r\n//   }\r\n// }\r\n","import PropTypes from \"prop-types\";\r\n\r\nexport default function ModalImage({ url, name }) {\r\n  return <img src={url} alt={name} />;\r\n}\r\n\r\nModalImage.propTypes = {\r\n  url: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n};\r\n","const BASE_URL = 'https://pixabay.com/api/';\r\nconst KEY = '22169948-cc9572b9e3579c1f2dd268170';\r\nexport default class ImagesAPIService {\r\n  constructor() {\r\n    this.searchQuery = '';\r\n    this.page = 1;\r\n    this.perPage = 12;\r\n  }\r\n\r\n  fetchImages() {\r\n    const url = `${BASE_URL}?image_type=photo&orientation=horizontal&q=${this.searchQuery}&page=${this.page}&per_page=${this.perPage}&key=${KEY}`;\r\n\r\n    return fetch(url)\r\n      .then(response => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        }\r\n        return Promise.reject(\r\n          new Error(`Нет изображений по данному запросу ${this.searchQuery}`),\r\n        );\r\n      })\r\n      .then(images => {\r\n        return images;\r\n      });\r\n  }\r\n\r\n  incrementPage() {\r\n    this.page += 1;\r\n  }\r\n\r\n  resetPage() {\r\n    this.page = 1;\r\n  }\r\n\r\n  get query() {\r\n    return this.searchQuery;\r\n  }\r\n\r\n  set query(newQuery) {\r\n    this.searchQuery = newQuery;\r\n  }\r\n}\r\n","import Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport s from './Loader.module.css';\r\n\r\nexport default function Spinner() {\r\n  return (\r\n    <div className={s.Spinner}>\r\n      <Loader\r\n        type=\"Circles\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={3000}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import s from './Button.module.css';\r\n\r\nexport default function Button({onClickBtn}) {\r\n    return (\r\n        <button type=\"button\" className={s.Button} onClick={onClickBtn}>Load more</button>\r\n    )\r\n}","import { useState, useEffect } from \"react\";\nimport Searchbar from \"../Searchbar/Searchbar\";\nimport ImageGallery from \"../ImageGallery/ImageGallery\";\nimport Modal from \"../Modal/Modal\";\nimport ModalImage from \"../ImageGalleryItem/ImageGalleryModal\";\nimport s from \"./App.module.css\";\nimport ImagesAPIService from \"../services/images-api\";\nimport Loader from \"../Loader/Loader\";\nimport Button from \"../Button/Button\";\n\nconst imagesAPIService = new ImagesAPIService();\n\nconst Status = {\n  IDLE: \"idle\",\n  PENDING: \"pending\",\n  RESOLVED: \"resolved\",\n  REJECTED: \"rejected\",\n};\n\nfunction App() {\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [largeImg, setLargeImg] = useState({});\n  const [showModal, setShowModal] = useState(false);\n  const [error, setError] = useState(null);\n  const [images, setImages] = useState([]);\n  const [status, setStatus] = useState(Status.IDLE);\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    if (searchValue === \"\") return;\n    imagesAPIService.query = searchValue;\n    console.log(page);\n\n    const loadImages = () => {\n      setStatus(Status.PENDING);\n\n      imagesAPIService\n        .fetchImages()\n        .then((result) => {\n          if (result.hits.length !== 0) {\n            setImages((prevImages) => [...prevImages, ...result.hits]);\n            setStatus(Status.RESOLVED);\n          }\n        })\n        .catch((error) => {\n          setError(error);\n          setStatus(Status.REJECTED);\n        })\n        .finally(() => {\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: \"smooth\",\n          });\n        });\n    };\n\n    loadImages();\n  }, [searchValue, page]);\n\n  const getSearchValue = (searchValue) => {\n    setSearchValue(searchValue);\n    setImages([]);\n    imagesAPIService.resetPage();\n    setPage(1);\n  };\n\n  const clearModalData = () => {\n    setLargeImg({});\n  };\n\n  const toggleModal = (e) => {\n    setShowModal((showModal) => !showModal);\n  };\n\n  const loadMoreImages = () => {\n    imagesAPIService.incrementPage();\n    setPage(imagesAPIService.page);\n  };\n\n  const openModalImg = (e) => {\n    const largeImage = images.find((img) => img.webformatURL === e.target.src);\n    setLargeImg(largeImage);\n    toggleModal();\n  };\n\n  return (\n    <div className={s.App}>\n      <Searchbar onSubmit={getSearchValue} />\n      {status === Status.IDLE && null}\n      {status === Status.REJECTED && <div>{error.message}</div>}\n      {status === Status.RESOLVED && images.length === 0 && (\n        <div className={s.notFound}>Images not found</div>\n      )}\n      <ImageGallery onImgClick={openModalImg} images={images} />\n      {status === Status.PENDING && <Loader />}\n      {images.length !== 0 && <Button onClickBtn={loadMoreImages} />}\n\n      {showModal && (\n        <Modal onClose={toggleModal} clearModal={clearModalData}>\n          <ModalImage url={largeImg.largeImageURL} name={largeImg.user} />\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\n// import { Component } from 'react';\n// import Searchbar from '../Searchbar/Searchbar';\n// import ImageGallery from '../ImageGallery/ImageGallery';\n// import Modal from '../Modal/Modal';\n// import ModalImage from '../ImageGalleryItem/ImageGalleryModal';\n// import s from './App.module.css';\n// import ImagesAPIService from '../services/images-api';\n// import Loader from '../Loader/Loader';\n// import Button from '../Button/Button';\n\n// const imagesAPIService = new ImagesAPIService();\n// const Status = {\n//   IDLE: 'idle',\n//   PENDING: 'pending',\n//   RESOLVED: 'resolved',\n//   REJECTED: 'rejected',\n// };\n// class App extends Component {\n//   state = {\n//     searchValue: '',\n//     largeImg: {},\n//     showModal: false,\n//     error: null,\n//     images: [],\n//     status: Status.IDLE,\n//   };\n\n//   componentDidUpdate(prevProps, prevState) {\n//     const prevName = prevState.searchValue;\n//     const nextName = this.state.searchValue;\n\n//     if (prevName !== nextName) {\n//       this.setState({images:[]})\n//       imagesAPIService.resetPage();\n//       this.loadImages(nextName);\n//     }\n//   }\n\n//   getSearchValue = searchValue => {\n//     this.setState({ searchValue });\n//   };\n\n//   clearModalData = () => {\n//     this.setState({ largeImg: {} });\n//   };\n\n//   toggleModal = e => {\n//     this.setState(({ showModal }) => ({\n//       showModal: !showModal,\n//     }));\n//   };\n\n//   loadMoreImages = () => {\n//     imagesAPIService.incrementPage();\n//     this.loadImages(this.state.searchValue);\n//   };\n\n//   openModalImg = e => {\n\n//     const largeImage = this.state.images.find(\n//       img => img.webformatURL === e.target.src,\n//     );\n//     this.setState({ largeImg: largeImage });\n//     this.toggleModal();\n//   };\n\n//   loadImages = value => {\n//     this.setState({ status: Status.PENDING });\n//     imagesAPIService.query = value;\n\n//     imagesAPIService\n//       .fetchImages()\n//       .then(images => {\n//         images.hits.length !== 0\n//           ? this.setState({\n//               images: [...this.state.images, ...images.hits],\n//               status: Status.RESOLVED,\n//             })\n//           : this.setState({ status: Status.RESOLVED });\n//       })\n//       .catch(error => this.setState({ error, status: Status.REJECTED }))\n//       .finally(() => {\n//         window.scrollTo({\n//           top: document.documentElement.scrollHeight,\n//           behavior: 'smooth',\n//         });\n//       });\n//   };\n\n//   render() {\n//     const { largeImg, searchValue, showModal, images, status } = this.state;\n//     return (\n//       <div className={s.App}>\n//         <Searchbar onSubmit={this.getSearchValue} />\n//         {status === Status.IDLE && null}\n//         {status === Status.REJECTED && <div>{this.error.message}</div>}\n//         {status === Status.RESOLVED && images.length === 0 && <div className={s.notFound}>Images not found</div>}\n//         <ImageGallery\n//           onImgClick={this.openModalImg}\n//           images={images}\n//         />\n//         {status === Status.PENDING && <Loader />}\n//         {images.length !== 0 && (\n//           <Button onClickBtn={() => this.loadMoreImages(searchValue)} />\n//         )}\n\n//         {showModal && (\n//           <Modal onClose={this.toggleModal} clearModal={this.clearModalData}>\n//             <ModalImage url={largeImg.largeImageURL} name={largeImg.user} />\n//           </Modal>\n//         )}\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__3lNHQ\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__3p6Os\"};"],"sourceRoot":""}